---
title: "US General Society Survey Analysis"
thanks: "Code and data are available at: [repository](https://github.com/NotSakura/USSocialSurvey.git)"
classoption: abstract
author: "Cristina Burca, Yan Mezhiborsky, Sakura Noskor"
format: pdf
date: today
date-format: long
abstract: |
 Some abstact
include-in-header: 
  text:
    \renewcommand{\abstractname}{Abstract}
bibliography: references.bib
margins:
  top: 0.25in
  bottom: 0.25in
  left: 0.5in
  right: 0.5in
toc: true
---

```{r}
#| include: false
#| warning: false
#| message: false

library(tidyverse)
library(patchwork)
library(gridExtra)
```

```{r}
#| include: false
#| warning: false
#| message: false

library(dataverse)
library(tidyverse)

ces2020 <-
  get_dataframe_by_name(
    filename = "CES20_Common_OUTPUT_vv.csv",
    dataset = "10.7910/DVN/E9N6PH",
    server = "dataverse.harvard.edu",
    .f = read_csv
  ) |>
  select(votereg, CC20_410, employ, immstat, dualcit, gender, birthyr, race, inputstate, presvote16post, religpew, edloan)

write_csv(ces2020, "ces2020.csv")



```

```{r}
#| include: false
#| warning: false
#| message: false


ces2020 <-
  read_csv(
    "ces2020.csv",
    col_types =
      cols(
        "votereg" = col_integer(),
        "CC20_410" = col_integer(),
        "employ" = col_integer(),
        "dualcit" = col_integer(), 
        "gender" = col_integer(), 
        "birthyr" = col_integer(), 
        "race" = col_integer(), 
        "inputstate" = col_integer(), 
        "presvote16post" = col_integer(), 
        "religpew" = col_integer(), 
        "edloan" = col_integer()
      )
  )

```

```{r}
#| include: false
#| warning: false
#| message: false

ces2020 <-
  ces2020 |>
  filter(votereg == 1,
         CC20_410 %in% c(1, 2)) |>
  mutate(
    voted_for = if_else(CC20_410 == 1, "Biden", "Trump"),
    voted_for = as_factor(voted_for),
    gender = if_else(gender == 1, "Male", "Female"),
    employ = case_when(
      employ == 1 ~ "Full-time",
      employ == 2 ~ "Part-time",
      employ == 3 ~ "Laid off",
      employ == 4 ~ "Unemployed",
      employ == 5 ~ "Retired",
      employ == 6 ~ "Permannetly disabled", 
      employ == 7 ~ "Homemaker", 
      employ == 8 ~ "Student", 
      employ == 9 ~ "Other"
    ),
    employ = factor(
      employ,
      levels = c(
        "Full-time",
        "Part-time",
        "laid off",
        "unemployed",
        "retired",
        "permannetly disabled", 
        "Homemaker", 
        "Student", "Other"
      )
    ), 
    immstat = case_when(
      immstat == 1 ~ "immigrant and citizen",
      immstat == 2 ~ "immigrant not citizen",
      immstat == 3 ~ "born in US, but parent(s) immigrant",
      immstat == 4 ~ "parent and I born in US but grandparent(s) immigrant",
      immstat == 5 ~ "all born in US",
    ),
    immstat = factor(immstat, levels = c( "immigrant and citizen","immigrant not citizen", "born in US, but parent(s) immigrant",     "parent and I born in US but grandparent(s) immigrant", "all born in US")
    ),
    dualcit = if_else(dualcit == 1, "Yes", "No"),
    race = case_when(
      race == 1 ~ "White",
      race == 2 ~ "Black",
      race == 3 ~ "Hispanic",
      race == 4 ~ "Asian",
      race == 5 ~ "Native American",
      race == 6 ~ "Middle Eastern", 
      race == 7 ~ "Two or more races", 
      race == 8 ~ "Other"
    ),
    race = factor(race, levels = c(
        "White","Black","Hispanic", "Asian", "Native American", "Middle Eastern",  "Two or more races", "Other")
    ), 
    presvote16post = case_when(
      presvote16post == 1 ~ "Donald Trump",
      presvote16post == 2 ~ "Hillary Clinton",
      presvote16post == 3 ~ "Gary Johnson",
      presvote16post == 4 ~ "Jill Stein",
      presvote16post == 5 ~ "Evan McMullin",
      presvote16post == 6 ~ "Other", 
      presvote16post == 7 ~ "Did not vote"
    ),
    presvote16post = factor(presvote16post, levels = c(
        "Hillary Clinton","Donald Trump","Gary Johnson", "Jill Stein", "Evan McMullin", "Other", "Did not vote")
    ),
    religpew = case_when(
      religpew == 1 ~ "Protestant",
      religpew == 2 ~ "Roman Catholic",
      religpew == 3 ~ "Mormon",
      religpew == 4 ~ "Eastern or Greek Orthodox",
      religpew == 5 ~ "Jewish",
      religpew == 6 ~ "Muslim", 
      religpew == 7 ~ "Buddhist", 
      religpew == 8 ~ "Hindu", 
      religpew == 9 ~ "Atheist", 
      religpew == 10 ~ "Agnostic",
      religpew == 11 ~ "Nothing in Particular",
      religpew == 12 ~ "Something else"
    ),
    religpew = factor(
      religpew,
      levels = c(
        "Protestant",
        "Roman Catholic",
        "Mormon",
        "Eastern or Greek Orthodox",
        "Jewish",
        "Muslim", 
        "Buddhist", 
        "Hindu", "Atheist", "Agnostic", "Nothing in Particular", "Something else"
      )
    ), 
    edloan = case_when(
      edloan == 1 ~ "Yes",
      edloan == 2 ~ "No",
      edloan == 3 ~ "Other",
      edloan == 4 ~ "Don't know",
      edloan == 5 ~ "None of these",
    ),
    edloan = factor(edloan, levels = c( "Yes","No", "Other", "Don't Know", "None of these")
    ) #########ADD input state it if you want to (sakura)
  ) |>
  select(votereg, employ, immstat, dualcit, gender, birthyr, race, inputstate, presvote16post, religpew, edloan)

```

# Introduction

# Data {#sec-data}

-   included variables of gender, birth year, race, registered state, employment, education loans, immigration status, dual-citizenship, religion, and 2016 US vote

# Model

The variable 'presvote16post' captures the 2016 US Presidential votes of individuals in the United States. Due to the minimal votes for Gary Johnson, Jill Stein, Evan McMullin, and all other candidates any votes not attributed to 'Hillary Clinton' or 'Donald Trump' were categorized as 'Other'.

We have modeled the following logisitc regression in @fig-votes:

```{r, fig.height=4, fig.width=8}
#| echo: false
#| warning: false
#| message: false
#| label: fig-votes
#| fig-cap: 'Logistic regression of 2016 US Presidential votes comparing parameters of gender and employment status'

#logisitc regression for binary outcome: YES OR NO, THIS OR THAT

#choose values "Hillary Clinton" and "Donald Trump", all other values as "Other"
ces2020_votes <- ces2020 %>%
  filter(presvote16post != 'Did not vote') %>%
  mutate(presvote16post = case_when(
    presvote16post == "Hillary Clinton" ~ "Hillary Clinton",
    presvote16post == "Donald Trump" ~ "Donald Trump",
    presvote16post == "Gary Johnson" ~ "Other",
    presvote16post == "Jill Stein" ~ "Other",
    presvote16post == "Evan McMullin" ~ "Other",
    presvote16post == "Other" ~ "Other"
  ))

#plot 2016 votes against employment status and gender
#SO MANY NA VALUES???
ces2020_votes %>%
  ggplot(aes(x= employ, fill=presvote16post)) +
  stat_count(position = "dodge") +
  facet_wrap(facets = vars(gender)) +
  theme_minimal() +
  coord_flip() +
  labs(x ="Employment status",
      y = "Count of votes",
      fill = "Vote in 2016")
```

```{r, fig.height=4, fig.width=8}
```

```{r, fig.height=4, fig.width=8}
#| echo: false
#| warning: false
#| message: false

ces2020_votes <- ces2020_votes %>%
  filter(!is.na(dualcit))

ces2020_votes %>% 
  ggplot(aes(x= immstat, fill=presvote16post)) +
  stat_count(position = "dodge") +
  facet_wrap(facets = vars(dualcit), scales = "free_x") +
  theme_minimal() +
  coord_flip() +
  labs(x ="Employment status",
      y = "Count of votes",
      fill = "Vote in 2016")

```

```{r, fig.height=4, fig.width=8}
#| echo: false
#| warning: false
#| message: false


ces2020_votes %>% 
  ggplot(aes(x= race, fill=presvote16post)) +
  stat_count(position = "dodge") +
  facet_wrap(facets = vars(gender), scales = "free_x") +
  theme_minimal() +
  coord_flip() +
  labs(x ="Employment status",
      y = "Count of votes",
      fill = "Vote in 2016")

```

```{r}
# Calculate percentages
percentage_data <- ces2020_votes %>%
  group_by(birthyr) %>%
  summarise(HillaryClinton = sum(presvote16post == "Hillary Clinton") / n() * 100,
            DonaldTrump = sum(presvote16post == "Donald Trump") / n() * 100,
            Other = sum(presvote16post == "Other") / n() * 100,
            DidNotVote = sum(presvote16post == "Did not Vote") / n() * 100) %>%
  ungroup()

# Reshape data to long format
percentage_data_long <- pivot_longer(percentage_data, cols = -birthyr, names_to = "Candidate", values_to = "Percentage")

plot_hillary <- ggplot(percentage_data_long %>% filter(Candidate == "HillaryClinton"), aes(x = birthyr, y = Percentage)) +
  geom_point() + 
  geom_smooth(method = "lm", se = FALSE, color = "blue") +
  labs(title = "Percentage for Hillary Clinton", y = "Percentage (%)") +
  theme_minimal()
plot_hillary

plot_trump <- ggplot(percentage_data_long %>% filter(Candidate == "DonaldTrump"), aes(x = birthyr, y = Percentage)) +
  geom_point() + 
  geom_smooth(method = "lm", se = FALSE, color = "blue") +
  labs(title = "Percentage for Donald Trump", y = "Percentage (%)") +
  theme_minimal()
plot_trump

plot_other <- ggplot(percentage_data_long %>% filter(Candidate == "Other"), aes(x = birthyr, y = Percentage)) +
  geom_point() + 
  geom_smooth(method = "lm", se = FALSE, color = "blue") +
  labs(title = "Percentage for Other", y = "Percentage (%)") +
  theme_minimal()
plot_other



```


### Model justification

We expect a positive relationship between the size of the wings and time spent aloft. In particular...

We can use maths by including latex between dollar signs, for instance $\theta$.

# Results

# Discussion

## First discussion point {#sec-first-point}

If my paper were 10 pages, then should be be at least 2.5 pages. The discussion is a chance to show off what you know and what you learnt from all this.

## Second discussion point

## Third discussion point

## Weaknesses and next steps

Weaknesses and next steps should also be included.

\newpage

\appendix

# Appendix {.unnumbered}

# Additional data details

# Model details {#sec-model-details}

## Posterior predictive check

In @fig-ppcheckandposteriorvsprior-1 we implement a posterior predictive check. This shows...

In @fig-ppcheckandposteriorvsprior-2 we compare the posterior with the prior. This shows...

```{r}
#| eval: true
#| echo: false
#| message: false
#| warning: false
#| label: fig-ppcheckandposteriorvsprior
#| layout-ncol: 2
#| fig-cap: "Examining how the model fits, and is affected by, the data"
#| fig-subcap: ["Posterior prediction check", "Comparing the posterior with the prior"]

```

## Diagnostics

```{r}
#| echo: false
#| eval: true
#| message: false
#| warning: false
#| label: fig-stanareyouokay
#| fig-cap: "Checking the convergence of the MCMC algorithm"
#| fig-subcap: ["Trace plot", "Rhat plot"]
#| layout-ncol: 2


```

\newpage

# References
